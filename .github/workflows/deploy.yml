name: CI/CD Alibaba ECS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"
  ECS_HOST: ${{ vars.ECS_HOST }}
  ECS_USER: ${{ vars.ECS_USER }}
  REMOTE_PATH: ${{ vars.REMOTE_PATH }}
  RESTART_COMMAND: ${{ vars.RESTART_COMMAND }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-test:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Static compilation check
        run: python -m compileall app

  deploy:
    name: Build Image & Deploy
    needs: build-test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    env:
      ECS_SSH_PORT: ${{ vars.ECS_SSH_PORT }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Sync project files to ECS
        uses: burnett01/rsync-deployments@v7
        with:
          switches: -avzr --delete --exclude ".git" --exclude ".github" --exclude "__pycache__" --exclude ".venv"
          path: ./
          remote_path: ${{ env.REMOTE_PATH }}
          remote_host: ${{ env.ECS_HOST }}
          remote_user: ${{ env.ECS_USER }}
          remote_key: ${{ secrets.ECS_SSH_KEY }}

      - name: Deploy to Alibaba Cloud ECS
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.ECS_HOST }}
          username: ${{ env.ECS_USER }}
          key: ${{ secrets.ECS_SSH_KEY }}
          port: ${{ env.ECS_SSH_PORT != '' && env.ECS_SSH_PORT || 22 }}
          envs: REMOTE_PATH,RESTART_COMMAND
          script: |
            set -e
            mkdir -p "$REMOTE_PATH"
            cd "$REMOTE_PATH"
            python3 -m venv .venv
            . .venv/bin/activate
            pip install --upgrade pip
            if [ -f requirements.txt ]; then
              pip install -r requirements.txt
            fi
            if [ -n "$RESTART_COMMAND" ]; then
              eval "$RESTART_COMMAND"
            else
              pkill -f "uvicorn app.main:app" || true
              nohup .venv/bin/uvicorn app.main:app --host 0.0.0.0 --port 8000 > backend.log 2>&1 &
            fi
